<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">



	<!-- 이 영역에 SQL문에 맞는 태그를 사용하여 SQl문 기술 -->

	<!-- 사용할 수 있는 기본적인 태그들 -->

	<!-- <select> ~~~ </select> -->
	<!-- <insert> ~~~ </insert> -->
	<!-- <update> ~~~ </update> -->
	<!-- <delete> ~~~ </delete -->

	<!-- 위 태크에서 사용되는 주요 e속성들 -->

	<!-- 1) id (필수값) : 해당 SQL문을 호출할 때 namespace값과 연결하여 사용하는 쿼리이름 -->

	<!-- 2) parameterType : SQL문에 사용될 데이터를 담은 객체타입을 지정한다. => 생략 가능 -->
	<!-- (보통 VO클래스, 자바의 기본타입명 등의 사용) -->

	<!-- 3) resultType : select문을 실행한 결과를 담기 위한 객체타입을 지정 -->
	<!-- (보통 VO클래스, 자바의 기본타입명 등이 사용) -->

	<!-- 4) resultMap : 결과 레코드 컬럼명과 VO 객체의 property명이 -->
	<!-- 다를 경우에 적절한 매핑작업을 위해 사용 -->


	<insert id="insertMember"
		parameterType="kr.or.ddit.member.vo.MemberVO">
		insert into mymember(mem_id, mem_name,mem_tel,mem_addr)
		values(#{memId},#{memName},#{memTel},#{memAddr})

	</insert>
	<update id="updateMember"
		parameterType="kr.or.ddit.member.vo.MemberVO">
		update mymember
		set mem_name=#{memName},
		mem_tel=#{memTel},
		mem_addr=#{memAddr}
		where mem_id = #{memId}
	</update>

	<delete id="deleteMember" parameterType="String">
		delete from mymember
		where mem_id = #{memId}
	</delete>

	<select id="selectAllMember"
		resultType="kr.or.ddit.member.vo.MemberVO">
		select mem_id memId, mem_name memName, mem_tel
		memTel,mem_addr memAddr, reg_dt regDt
		from mymember
	</select>

	<select id="getMember" parameterType="String"
		resultType="kr.or.ddit.member.vo.MemberVO">
		select mem_id memId, mem_name memName, mem_tel
		memTel,mem_addr memAddr from mymember where mem_id = #{mem_id}
	</select>

	<select id="getMembe2r" parameterType="Map" resultType="HashMap">
		select
		mem_id, mem_name , mem_tel
		,mem_addr
		from mymember where mem_id =
		#{mem_id}
	</select>

	<select id="searchMember"
		resultType="kr.or.ddit.member.vo.MemberVO">

		select mem_id memId, mem_name memName, mem_tel
		memTel,mem_addr memAddr,
		reg_dt regDt
		from mymember
		<where>
			<if test='memId != null and memId !=""'>
				and mem_id = #{memId}
			</if>
			<if test='memName != null and memName !=""'>
				and mem_name = #{memName}
			</if>
			<if test='memTel != null and !memTel.equals("")'>
				ane mem_tel = #{memTel}
			</if>
			<if test='memAddr != null and memAddr !=""'>
				and mem_addr like '%' || #{memAddr} || '%'
			</if>
		</where>
	</select>

	<select id="checkMember" resultType="int">

		select count(*) cnt
		from
		mymember
		where mem_id = #{mem_id}


	</select>
</mapper>