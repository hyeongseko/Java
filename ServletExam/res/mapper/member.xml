<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<!-- 이영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다 사용할 수 있는 기본적인 태그들 <select> ~~~ </select> 
		<insert> <update> <delete> 위 태그에서 사용되는 주요 속성들 1) id(필수 값) : 해당 SQL문을 호출할 
		때 namespace값과 연결하여 사용하는 쿼리이름 2) parameterType : SQL문에 사용될 데이터를 담은 객체타입을 지정한다. 
		(보통 VO클래스, 자바의 기본타입명 등이 사용된다.) 3) resultTpye : select문을 실행한 결과를 담기 위한 객체타입을 
		지정한다 (보통 VO클래스, 자바의 기본타입명 등이 사용된다.) 4) resultMap : 결과 레코드 컬럼명과 VO 객체의 property명이 
		다를 경우에 적절한 매핑작업을 위해 사용한다. -->

	<insert id="insertMember"
		parameterType="kr.or.ddit.member.vo.MemberVO">

		INSERT INTO MYMEMBER(MEM_ID, MEM_NAME, MEM_TEL,
		MEM_ADDR, ATCH_FILE_ID)
		VALUES (#{memId}, #{memName}, #{memTel}, #{memAddr}, #{atchFileId})

	</insert>

	<update id="updateMember"
		parameterType="kr.or.ddit.member.vo.MemberVO">
		UPDATE MYMEMBER SET MEM_NAME = #{memName}, MEM_TEL =
		#{memTel}, MEM_ADDR =#{memAddr}, ATCH_FILE_ID=#{atchFileId} WHERE
		MEM_ID = #{memId}
	</update>

	<delete id="deleteMember" parameterType="String">
		DELETE FROM MYMEMBER WHERE MEM_ID = #{memId} <!-- 객체가 String 같이 하나만 있을경우 
			이름을 아무거나 적어도 됨 -->
	</delete>

	<select id="selectAllMember"
		resultType="kr.or.ddit.member.vo.MemberVO">
		SELECT MEM_ID memId, MEM_NAME memName, MEM_TEL memTel, MEM_ADDR
		memAddr, REG_DT regDt, ATCH_FILE_ID atchFileId FROM MYMEMBER ORDER BY
		MEM_ID
		<!-- 컬럼에대한 이름을 지정해 주지 안을경우 set을 MEM_ID 와 같이 컬럼명으로 set을 지정해준다 -->
	</select>

	<select id="selectOneMember" parameterType="String"
		resultType="kr.or.ddit.member.vo.MemberVO">
		SELECT MEM_ID memId, MEM_NAME memName, MEM_TEL memTel, MEM_ADDR
		memAddr, REG_DT regDt, ATCH_FILE_ID atchFileId FROM MYMEMBER WHERE
		MEM_ID = #{memId}
		<!-- 컬럼에대한 이름을 지정해 주지 안을경우 set을 MEM_ID 와 같이 컬럼명으로 set을 지정해준다 -->
	</select>

	<select id="checkMember" parameterType="String" resultType="int">
		SELECT COUNT(*) cnt FROM MYMEMBER WHERE MEM_ID = #{memId}
		<!-- 컬럼에대한 이름을 지정해 주지 안을경우 set을 MEM_ID 와 같이 컬럼명으로 set을 지정해준다 -->
	</select>

	<select id="mapMember" parameterType="Map" resultType="HashMap">
		SELECT MEM_ID, MEM_NAME, MEM_TEL, MEM_ADDR FROM MYMEMBER WHERE MEM_ID
		= #{memId}
		<!-- 컬럼에대한 이름을 지정해 주지 안을경우 set을 MEM_ID 와 같이 컬럼명으로 set을 지정해준다 -->
	</select>

	<!-- <select id="getMember" parameterType="Map" resultType="HashMap"> SELECT 
		MEM_ID, MEM_NAME, MEM_TEL, MEM_ADDR FROM MYMEMBER WHERE MEM_ID = #{memId} 
		컬럼에대한 이름을 지정해 주지 안을경우 set을 MEM_ID 와 같이 컬럼명으로 set을 지정해준다 </select> -->

	<select id="searchMember"
		resultType="kr.or.ddit.member.vo.MemberVO">
		SELECT MEM_ID memId, MEM_NAME memName, MEM_TEL memTel, MEM_ADDR
		memAddr, REG_DT regDt, ATCH_FILE_ID atchFileId FROM MYMEMBER
		<where>
			<if test='memId != null and memId !=""'>
				and mem_id = #{memId}
			</if>
			<if test='memName != null and memName !=""'>
				and mem_name = #{memName}
			</if>
			<if test='memTel != null and memTel !=""'>
				and mem_tel = #{memTel}
			</if>
			<if test='memAddr != null and memAddr !=""'>
				and mem_addr like '%' || #{memAddr} || '%'
			</if>

		</where>
		<!-- 컬럼에대한 이름을 지정해 주지 안을경우 set을 MEM_ID 와 같이 컬럼명으로 set을 지정해준다 -->
	</select>

	<select id="getMember"
		resultType="kr.or.ddit.member.vo.MemberVO">
		SELECT MEM_ID memId, MEM_NAME memName, MEM_TEL memTel,
		MEM_ADDR memAddr, REG_DT regDt, ATCH_FILE_ID atchFileId FROM MYMEMBER WHERE
		MEM_ID = #{memId}
	</select>


</mapper>